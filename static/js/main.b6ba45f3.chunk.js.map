{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","Title","Poster","imdbID","Plot","className","src","alt","href","MoviesList","movies","map","FindMovie","addMovie","useState","value","setValue","setMovie","isValid","setValid","showMovie","a","title","fetch","then","response","json","movieFromServer","Response","htmlFor","type","id","placeholder","onChange","event","target","onClick","disabled","App","data","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAENC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,OACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,KAGF,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGD,EACD,uBACA,mBAAGI,KAAI,qCAAgCL,GAAvC,4BCpCGM,EAA8B,SAAC,GAAD,QACzCC,cADyC,MAChC,GADgC,SAGzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMG,c,uBCJfS,G,MAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOd,EAAP,KAAciB,EAAd,KACA,EAA4BH,oBAAS,GAArC,mBAAOI,EAAP,KAAgBC,EAAhB,KAOMC,EAAS,uCAAG,4BAAAC,EAAA,sECjBKC,EDkBkBP,ECjBlCQ,MAAM,GAAD,OAHG,2CAGH,cAAkBD,IAC3BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDeX,OAGiB,WAF3BC,EADU,QAGIC,UAClBT,GAAS,GACTF,EAAS,QAETA,EAASU,GACTX,EAAS,KARK,iCCjBI,IAACM,IDiBL,OAAH,qDAYf,OACE,qCACE,uBAAMjB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwB,QAAQ,cAAjC,yBAIA,qBAAKxB,UAAU,UAAf,SACE,uBACEyB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ3B,UAAU,mBACVU,MAAOA,EACPkB,SAhCS,SAACC,GACpBlB,EAASkB,EAAMC,OAAOpB,OACtBI,GAAS,SAkCDD,GAAWH,GACX,mBAAGV,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,kBACV+B,QAAS,WACPhB,KAJJ,4BAWF,qBAAKf,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,oBACVgC,SAAoB,OAAVrC,EACVoC,QAAS,WACPvB,EAASb,GACTiB,EAAS,OANb,qCAeLC,GAAWlB,GACV,sBAAKK,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWL,MAAOA,Y,OEnFfsC,EAAgB,WAC3B,MAA2BxB,mBAAkByB,GAA7C,mBAAO7B,EAAP,KAAeO,EAAf,KAQA,OACE,sBAAKZ,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAWQ,SAZA,SAAC2B,GACX9B,EAAO+B,MAAK,SAAAzC,GAAK,OAAIA,EAAMG,SAAWqC,EAASrC,WAClDc,EAAS,CAACuB,GAAF,mBAAe9B,cCP7BgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.b6ba45f3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n  const {\n    Title,\n    Poster,\n    imdbID,\n    Plot,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {Plot}\n          <br />\n          <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} movie={movie as Movie} />\n    ))}\n  </div>\n);\n","import { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (newMovie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isValid, setValid] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    setValid(true);\n  };\n\n  const showMovie = async () => {\n    const movieFromServer = await getMovie(value);\n\n    if (movieFromServer.Response === 'False') {\n      setValid(false);\n      setMovie(null);\n    } else {\n      setMovie(movieFromServer);\n      setValue('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger!\"\n              value={value}\n              onChange={handleChange}\n            />\n          </div>\n\n          {!isValid && value && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                showMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={movie === null}\n              onClick={() => {\n                addMovie(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isValid && movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie as Movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=d9ae6fa8';\n\nexport const getMovie = (title: string) => {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => response.json());\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState<Movie[]>(data);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovie([newMovie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}